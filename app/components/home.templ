package components

import (
	"github.com/joaquinrovira/infiltra2-returns/app/constants"
	"math/rand"
)

templ Home() {
	@Layout() {
		<div style="" class="bg-inherit" x-data="{ room: undefined, custom: false }">
			<div class="flex flex-col items-center justify-center pt-8 bg-inherit">
				@TextZoom("bg-inherit")
			</div>
			<div class="flex flex-col items-center justify-center pt-10 p-3">
				<div class="grid grid-cols-2 grid-flow-row gap-8">
					<a href="/room/mansion-abandonada">
						<button
							style="background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(/_/img/location/mansion-abandonada-sm.jpeg);"
							class="p-3 max-w-32 ml-auto text-lg rounded-md shadow-sm hover:shadow-lg 
								transition-all bg-zinc-300 hover:bg-zinc-200 text-zinc-100
								bg-center bg-[length:100%] hover:bg-[length:120%]
								relative"
						>
							Mansión abandonada
						</button>
					</a>
					<a href="/room/callejon-oscuro">
						<button
							style="background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(/_/img/location/callejon-oscuro-sm.jpeg);"
							class="p-3 max-w-32 mr-auto text-lg rounded-md shadow-sm hover:shadow-lg 
								transition-all bg-zinc-300 hover:bg-zinc-200 text-zinc-100
								bg-center bg-[length:100%] hover:bg-[length:120%]
								relative"
						>
							Callejón oscuro
						</button>
					</a>
					<a href="/room/cripta-subterranea">
						<button
							style="background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(/_/img/location/cripta-subterranea-sm.jpeg);"
							class="p-3 max-w-32 ml-auto text-lg rounded-md shadow-sm hover:shadow-lg 
							transition-all bg-zinc-300 hover:bg-zinc-200 text-zinc-100
							bg-center bg-[length:100%] hover:bg-[length:120%]
							relative"
						>
							Cripta subterránea
						</button>
					</a>
					<a href="/room/cafe-de-las-sombras">
						<button
							style="background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(/_/img/location/cafe-de-las-sombras-sm.jpeg);"
							class="p-3 max-w-32 mr-auto text-lg rounded-md shadow-sm hover:shadow-lg 
							transition-all bg-zinc-300 hover:bg-zinc-200 text-zinc-100
							bg-center bg-[length:100%] hover:bg-[length:120%]
							relative"
						>
							Café de las sombras
						</button>
					</a>
				</div>
			</div>
			<div class="flex justify-center">
				<button
					x-show="!custom"
					x-transition
					x-transition.duration.300ms
					x-on:click={"custom = true"}
					style="background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(/_/img/location/custom-sm.jpeg);"
					class="row-span-2 p-3 mt-5 min-w-[18rem] text-lg rounded-md shadow-sm hover:shadow-lg 
				transition-all bg-zinc-300 hover:bg-zinc-200 text-zinc-100
				bg-center bg-[length:100%] hover:bg-[length:120%]
				relative"
				>
					Elegir otro destino
				</button>
			</div>
			<form x-show="custom" x-transition x-transition.delay.300ms hx-boost="true" action="/lobby">
				<div class="flex flex-col items-center space-y-2 px-4 pt-5">
					<div class="flex min-w-[18rem] flex-col gap-2">
						<input
							class="
								border-zinc-300 appearance-none w-full py-2 px-3 rounded-md 
								placeholder-zinc-400 outline-dashed outline-1 focus:outline-transparent focus:ring-1 focus:ring-zinc-900 
								focus:ring-offset-1 transition-all"
							name={ constants.FORM_LOBBY_NAME }
							id={ constants.FORM_LOBBY_NAME }
							placeholder={ RandomPlaceHolder() }
							required
							type="text"
						/>
						<button
							style="background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(/_/img/location/custom-sm.jpeg);"
							class="row-span-2 py-2 px-3 mt-2 min-w-[18rem] text-lg rounded-md shadow-sm hover:shadow-lg 
						transition-all bg-zinc-300 hover:bg-zinc-200 text-zinc-100
						bg-center bg-[length:100%] hover:bg-[length:120%]
						relative"
						>
							Entrar
						</button>
					</div>
				</div>
			</form>
		</div>
	}
}

func RandomPlaceHolder() string {
	reasons := []string{
		"Mansión abandonada",
		"Callejón oscuro",
		"Bosque encantado",
		"Cripta subterránea",
		"Café de las sombras",
	}
	n := rand.Int() % len(reasons)
	return reasons[n]
}

templ TextZoom(BackgroundColorClass string) {
	@Animations()
	<style>
        #TextZoomSm {
            --circle-radius: 2.8rem;
            --text-size: 5rem;
        }
        #TextZoomMd {
            --circle-radius: 6rem;
            --text-size: 10rem;
        }
	</style>
	<div id="TextZoomSm" class={ "md:hidden pb-5 w-full overflow-hidden", BackgroundColorClass }>
		@TextZoomInternal(BackgroundColorClass)
	</div>
	<div id="TextZoomMd" class={ "max-md:hidden pb-5 w-full overflow-hidden", BackgroundColorClass }>
		@TextZoomInternal(BackgroundColorClass)
	</div>
}

templ TextZoomInternal(BackgroundColorClass string) {
	<div
		class={ BackgroundColorClass, "mx-auto flex flex-col justify-center items-center relative" }
	>
		<span class="text-[calc(var(--text-size))] relative bg-inherit">
			Infiltrado
			<div class={ "z-10 leading-[1.1] absolute whitespace-nowrap bg-inherit top-0 bottom-0 my-auto text-[calc(1.3_*_var(--text-size))]", ZoomedTextAnimation() }>
				Infiltrado
			</div>
			<div
				class={ "absolute z-20 box-border border-0 border-red-500 h-[calc(2_*_var(--circle-radius))] w-[calc(2_*_var(--circle-radius))] top-0 bottom-0 my-auto", MagnifyingGlassAnimation() }
			>
				<div class="relative">
					<svg
						class="absolute top-[calc(-0.39_*_var(--circle-radius))] left-[calc(-0.39_*_var(--circle-radius))] h-[calc(3.15_*_var(--circle-radius))]"
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="0.75"
						stroke="currentColor"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
						></path>
					</svg>
				</div>
			</div>
		</span>
	</div>
}

css ZoomedTextAnimation() {
	transition-timing-function: ease-in-out;
	animation-duration: 6s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	animation-name: ZoomedText;
}

css MagnifyingGlassAnimation() {
	transition-timing-function: ease-in-out;
	animation-duration: 6s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	animation-name: MagnifyingGlass;
}

templ Animations() {
	<style>
        @keyframes ZoomedText {
            from {
                clip-path: circle(var(--circle-radius) at 0% 50%);
                left: 0;
                transform: translateX(0%);
            }

            to {
                clip-path: circle(var(--circle-radius) at 100% 50%);
                left: 100%;
                transform: translateX(-100%);
            }
        }


        @keyframes MagnifyingGlass {
            from {
                left: calc(var(--circle-radius) * -1);
                transform: translateX(0%);
            }

            to {
                left: calc(100% + var(--circle-radius));
                transform: translateX(-100%);
            }
        }
	</style>
}
